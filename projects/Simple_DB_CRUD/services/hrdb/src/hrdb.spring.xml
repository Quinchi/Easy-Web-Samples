<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<beans xsi:schemaLocation="http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.8.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd" xmlns="http://www.springframework.org/schema/beans" xmlns:cloud="http://schema.cloudfoundry.org/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <bean class="com.hrdb.Hrdb" scope="singleton" lazy-init="true" id="hrdb">
        <property name="dataServiceManager">
            <ref bean="hrdbDataService"/>
        </property>
        <property name="taskManager">
            <ref bean="hrdbTaskMgr"/>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.data.spring.WMPropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:hrdb.properties</value>
            </list>
        </property>
    </bean>
    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="true" id="hrdbDataSource">
        <property name="driverClassName" value="${hrdb.driverClassName}"/>
        <property name="url" value="${hrdb.connectionUrl}"/>
        <property name="username" value="${hrdb.username}"/>
        <property name="password" value="${hrdb.password}"/>
    </bean>
    <bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" lazy-init="true" id="hrdbTxMgr">
        <property name="sessionFactory">
            <ref bean="hrdbSessionFactory"/>
        </property>
    </bean>
    <bean class="org.springframework.orm.hibernate3.HibernateTemplate" lazy-init="true" id="hrdbHibernateTemplate">
        <property name="sessionFactory">
            <ref bean="hrdbSessionFactory"/>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.data.spring.ConfigurationAndSessionFactoryBean" lazy-init="true" id="hrdbSessionFactory">
        <property name="name" value="hrdb"/>
        <property name="dataSource" ref="hrdbDataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hrdb.dialect}</prop>
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.transaction.JDBCTransactionFactory
                </prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.jdbc.batch_size">0</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>com/hrdb/data/Department.hbm.xml</value>
                <value>com/hrdb/data/Employee.hbm.xml</value>
                <value>com/hrdb/data/User.hbm.xml</value>
                <value>com/hrdb/data/Vacation.hbm.xml</value>
                <value>com/hrdb/data/app-queries.ql.xml</value>
            </list>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.data.spring.SpringDataServiceManager" lazy-init="true" id="hrdbDataService">
        <constructor-arg>
            <value>hrdb</value>
        </constructor-arg>
        <constructor-arg>
            <ref bean="hrdbHibernateTemplate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="hrdbTxMgr"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="hrdbTaskMgr"/>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="useIndividualCRUDOperations" value="false"/>
                <entry key="refreshEntities" value=""/>
            </map>
        </constructor-arg>
    </bean>
    <bean class="com.wavemaker.runtime.data.DefaultTaskManager" lazy-init="true" id="hrdbTaskMgr"/>
    <bean class="com.wavemaker.runtime.service.events.EventWire" lazy-init="false">
        <property name="serviceWire" ref="hrdbServiceWire"/>
        <property name="eventListener">
            <bean class="com.wavemaker.runtime.data.DataServiceEventListener"/>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.service.reflect.ReflectServiceWire" scope="singleton" lazy-init="false" id="hrdbServiceWire">
        <property name="serviceId" value="hrdb"/>
        <property name="serviceType" ref="DataService"/>
    </bean>
</beans>
